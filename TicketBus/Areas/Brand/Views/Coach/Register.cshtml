@using TicketBus.Models
@model TicketBus.Models.Coach

@{
    ViewData["Title"] = "FORM REGISTER";
    ViewData["HeaderTitle"] = "<i class='fas fa-bus-alt me-2 text-primary'></i>FORM REGISTER";
    Layout = "~/Areas/Brand/Views/Shared/_Layout.cshtml";
}

<!-- Phần thông báo từ TempData -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-4">
    <form asp-action="Register" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="mb-3">
            <label asp-for="CoachCode" class="form-label">Mã xe</label>
            <input asp-for="CoachCode" class="form-control" />
            <span asp-validation-for="CoachCode" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="NumberPlate" class="form-label">Biển số xe</label>
            <input asp-for="NumberPlate" class="form-control" />
            <span asp-validation-for="NumberPlate" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="IdType" class="form-label">Loại xe</label>
            <select asp-for="IdType" class="form-select">
                <option value="">-- Chọn loại xe --</option>
                @if (ViewBag.VehicleTypes != null)
                {
                    foreach (var vt in (List<SelectListItem>)ViewBag.VehicleTypes)
                    {
                        <option value="@vt.Value">@vt.Text</option>
                    }
                }
            </select>
            <span asp-validation-for="IdType" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="State" class="form-label">Trạng thái</label>
            <select asp-for="State" class="form-select">
                <option value="@CoachState.ChoPheDuyet">Chờ phê duyệt</option>
                <option value="@CoachState.HoatDong">Hoạt động</option>
                <option value="@CoachState.KhongHoatDong">Không hoạt động</option>
            </select>
            <span asp-validation-for="State" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Hình ảnh xe (có thể chọn nhiều ảnh)</label>
            <input type="file" id="imageFiles" name="imageFiles" class="form-control" accept="image/*" multiple onchange="handleFileSelect(this, 'imageFiles', 'selectedImageFiles')" />
            <div id="selectedImageFiles" class="mt-2"></div>
        </div>

        <div class="mb-3">
            <label class="form-label">Tài liệu xe (có thể chọn nhiều file PDF hoặc Word)</label>
            <input type="file" id="documentFiles" name="documentFiles" class="form-control" accept=".pdf,.doc,.docx" multiple onchange="handleFileSelect(this, 'documentFiles', 'selectedDocumentFiles')" />
            <div id="selectedDocumentFiles" class="mt-2"></div>
        </div>

        <!-- Ẩn IdBrand vì đã được điền sẵn trong controller -->
        <input type="hidden" asp-for="IdBrand" />

        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Đăng ký</button>
            <a asp-action="Index" asp-controller="Home" class="btn btn-secondary ms-2">Hủy</a>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
        // Object để lưu trữ danh sách file đã chọn cho từng input
        const fileSelections = {
            imageFiles: [],
            documentFiles: []
        };

        function handleFileSelect(input, inputId, outputId) {
            const files = input.files;
            const output = document.getElementById(outputId);
            output.innerHTML = '';

            // Thêm các file mới vào danh sách tương ứng
            for (let i = 0; i < files.length; i++) {
                // Kiểm tra file có trùng không (dựa trên tên file)
                if (!fileSelections[inputId].some(f => f.name === files[i].name)) {
                    fileSelections[inputId].push(files[i]);
                }
            }

            // Hiển thị danh sách file đã chọn
            if (fileSelections[inputId].length > 0) {
                const ul = document.createElement('ul');
                fileSelections[inputId].forEach((file, index) => {
                    const li = document.createElement('li');
                    li.textContent = file.name + ' ';
                    const removeBtn = document.createElement('button');
                    removeBtn.textContent = 'Xóa';
                    removeBtn.className = 'btn btn-danger btn-sm ms-2';
                    removeBtn.onclick = () => {
                        fileSelections[inputId].splice(index, 1);
                        handleFileSelect({ files: [] }, inputId, outputId); // Cập nhật lại UI
                    };
                    li.appendChild(removeBtn);
                    ul.appendChild(li);
                });
                output.appendChild(ul);
            } else {
                output.textContent = 'Chưa chọn file nào.';
            }

            // Cập nhật input file để gửi
            const dataTransfer = new DataTransfer();
            fileSelections[inputId].forEach(file => dataTransfer.items.add(file));
            input.files = dataTransfer.files;

            // Debug: Kiểm tra số lượng file trong input
            console.log(`Số lượng file trong ${inputId}:`, input.files.length);
        }

        // Đảm bảo input file được đặt lại khi tải lại trang
        document.getElementById('imageFiles').value = null;
        document.getElementById('documentFiles').value = null;
    </script>
}